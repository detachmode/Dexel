<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:viewModels="clr-namespace:Dexel.Editor.ViewModels"
    xmlns:views="clr-namespace:Dexel.Editor.Views"
    xmlns:drawingBoard1="clr-namespace:Dexel.Editor.ViewModels.DrawingBoard"
    xmlns:dragAndDrop="clr-namespace:Dexel.Editor.Views.DragAndDrop"
    xmlns:customControls="clr-namespace:Dexel.Editor.Views.CustomControls"
    xmlns:drawingBoard="clr-namespace:Dexel.Editor.Views.UserControls.DrawingBoard"
    x:Class="Dexel.Editor.Views.UserControls.DrawingBoard.DangelingConnectionView"
    d:DesignWidth="100"
    d:DataContext="{d:DesignInstance drawingBoard1:DangelingConnectionViewModel, IsDesignTimeCreatable=True}"
    mc:Ignorable="d"
    >


    <Grid Background="{DynamicResource OuterFillPointerBrush}"  Canvas.ZIndex="100"
          ToolTip="{Binding ValidationErrorMessage}"
          Height="42" >
        <i:Interaction.Behaviors>
            <dragAndDrop:FrameworkElementDropBehavior  />
        </i:Interaction.Behaviors>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>

            <ColumnDefinition Width="11*"/>
            <ColumnDefinition Width="30"/>

        </Grid.ColumnDefinitions>
        <Rectangle  
            Visibility="{Binding ValidationFlag, Converter={StaticResource ValidationFlagVisbilityConverter}}"          
            Grid.RowSpan="2" Grid.ColumnSpan="2"  
            
            Fill="{Binding ValidationFlag, Converter={StaticResource ValidationFlagFillConverter}}"
            Stroke="{Binding ValidationFlag, Converter={StaticResource ValidationFlagColorConverter}}" 
            StrokeEndLineCap="Square" StrokeMiterLimit="0" StrokeDashCap="Square" 
            StrokeDashArray="1 2" StrokeLineJoin="Round"/>

        <Rectangle Grid.Column="0" Grid.RowSpan="2" Margin="-20,0,-28,0" Fill="{DynamicResource FillPointerBrush}" Height="{DynamicResource StrokeThickness}" VerticalAlignment="Center"  />
        <Grid Background="Transparent" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2">
            <i:Interaction.Behaviors>
                <dragAndDrop:FrameworkElementDragBehavior  />
                <dragAndDrop:MouseHoverFeedBack/>
            </i:Interaction.Behaviors>
            <Grid Margin="0,1,0,0" HorizontalAlignment="Right" VerticalAlignment="Center">
                
         
            <Path x:Name="ThePath" StrokeThickness="2" Stroke="{DynamicResource FillPointerBrush}" 
              Data="M10,5 L0,0">
                    <Path.StrokeStartLineCap>Round</Path.StrokeStartLineCap>
                    <Path.StrokeEndLineCap>Round</Path.StrokeEndLineCap>
            </Path>
            <Path x:Name="The2Path" StrokeThickness="2" Stroke="{DynamicResource FillPointerBrush}" 
              Data="M0,10 L10,5">
                    <Path.StrokeStartLineCap>Round</Path.StrokeStartLineCap>
                    <Path.StrokeEndLineCap>Round</Path.StrokeEndLineCap>
            </Path>
            </Grid>
        </Grid>
        <TextBox Grid.Row="1" FontSize="11"
                 TextChanged="ActionNameTextBox_OnTextChanged"
                 Visibility="{Binding DataContext.VisibilityDatanames, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type drawingBoard:DrawingBoard}}}"
                 Grid.Column="0" x:Name="ActionNameTextBox" VerticalAlignment="Top"
                KeyDown="ActionNameTextBox_OnKeyDown"
                 Text="{Binding Model.ActionName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Margin="0,-2,0,0"
                 
                         CaretBrush="{DynamicResource Foreground}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{DynamicResource Actionname}" />

        <Border
            Margin="4,-2,10,0"  Grid.Column="0"  
                Visibility="{Binding DataContext.VisibilityDatanames, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type drawingBoard:DrawingBoard}}}"
                Panel.ZIndex="999"   BorderBrush="{DynamicResource FillPointerBrush}"
                BorderThickness="0.5" HorizontalAlignment="Left" VerticalAlignment="Center">
            <Grid>
                <Grid Opacity="0.93" Background="{DynamicResource BGDatanames}">
                    <Grid.Effect>
                        <DropShadowEffect ShadowDepth="3" Opacity="0.3" BlurRadius="6"/>
                        <!--<BlurEffect Radius="5" KernelType="Gaussian"/>-->
                    </Grid.Effect>
                </Grid>
                <customControls:DataNamesControl
                   
                    KeyDown="TheDataNamesControl_OnKeyDown"
                    Height="20" VerticalAlignment="Bottom"
                     Visibility="{Binding DataContext.VisibilityDatanames, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type drawingBoard:DrawingBoard}}}"
            x:Name="TheDataNamesControl" 
                    
            Grid.Row="0" 
           DataContext="{Binding Model, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Border>




    </Grid>
</UserControl>